How did viewing a diff between two versions of a file help you see the bug that was introduced?
It compared the lines that were different between the two files.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
Instead of constantly making manual backups, I can keep track of the changes I made in a clean UI.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: You have full control and flexibility of when to save.
Cons: If your computer shorts out or you forget to save, you can lose all your work.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git is geared toward developers who often change multiple files at once while coding. People using Google Docs tend to work on a single file at a time.

How can you use the commands git log and git diff to view the history of files?
You use git log to see all the changes to the repository and git diff to compare two files using their commit IDs.

How might using version control make you more confident to make changes that could break something?
No matter how badly I break something, I can always go back to a previous version that worked.

Now that you have your workspace set up, what do you want to try using Git for?
Setting up Version Control for our development team at work.